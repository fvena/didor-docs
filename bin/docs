#!/usr/bin/env node
/* eslint no-console: 0 */

const program = require('commander'); // Framework para desarrollar CLI
const clear = require('clear'); // Limpia el terminal
const updateNotifier = require('update-notifier'); // Muestra mensaje si hay una versión nueva
const pkg = require('../package.json'); // Obtiene el archivo package.json
const log = require('../lib/helpers/log'); // Logs por pantalla tuneados

const initDocs = require('../lib/init'); // Genera los archivos mínimos necesarios para comenzar a documentar
const serveDocs = require('../lib/serve'); // Levanta un senvidor local para mostrar la documentación
const buildDocs = require('../lib/build'); // Compila y copia los archivos en una carpeta para poder publicarlos
const buildPWA = require('../lib/pwa'); // Compila y copia los archivos en una carpeta para poder publicarlos

/*
 * Limpia el terminal
 */
clear();

/*
 * Muestra el saludo inicial
 */
log.brand('######################');
log.brand(' ########################        88888b  8888  88888b  d8888b  88888b');
log.brand('  #########################      88  88   88   88  88  88  88  88  88');
log.brand('    ########################     88  88   88   88  88  88  88  8888b ');
log.brand('       ######################    88888P  8888  88888P  Y8888P  88  Yb');
log.brand('');
log.brand('       ######################    88888b  d8888b  d88888  d88888');
log.brand('    ########################     88  88  88  88  88      Y88   ');
log.brand('  #########################      88  88  88  88  88         88b');
log.brand(' ########################        88888P  Y8888P  Y88888  88888P');
log.brand('######################');
log.brand('\n\n');
log.brand(`version ${pkg.version}`);

/*
 * Configuración del CLI
 */
// prettier-ignore
program
  .version(pkg.version, '-v, --version')
  .addHelpCommand(false);

// prettier-ignore
program
  .command('init [configFile]')
  .description('Genera los archivos mínimos necesarios para comenzar a documentar')
  .action(configFile => {
    initDocs(configFile);
  });

// prettier-ignore
program
  .command('serve [configFile]')
  .description('Levanta un servidor local para mostrar la documentación.')
  .action(configFile => {
    serveDocs(configFile);
  });

// prettier-ignore
program
  .command('build [configFile]')
  .description('Compila y copia los archivos en una carpeta para poder publicarlos.')
  .action(configFile => {
    buildDocs(configFile);
  });

// prettier-ignore
program
  .command('pwa [configFile]')
  .description('Genera automáticamente un favicon, iconos y pantallas de inicio para configurar una PWA')
  .action(configFile => {
    buildPWA(configFile);
  });

/*
 * Menú de ayuda
 */
program.on('--help', () => {
  console.log('');
  console.log('Ejemplos:');
  console.log('  $ didor serve');
  console.log('  $ didor serve /didor.config.js');
  console.log('');
});

/*
 * Incializa el CLI
 */
program.parse(process.argv);

/*
 * Muestra un mensaje indicando si hay una versión nueva
 */
updateNotifier({ pkg }).notify();
